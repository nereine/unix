#!/usr/bin/env bash
# up is a simple cross-platform shell script for package/system upgrade
# up.tables is a files containing command tables for up

# up_arg() will source commands from up.tables and select which to run based on argument ($1)
up_arg() {
	# User input ($1) is filtered here in case statement below
	case "$1" in
		'd'|'date')
			upupdate;
			;;
		'g'|'grade')
			upupgrade;
			;;
		'l'|'list')
			uplist;
			;;
		's'|'sys')
			upsys;
			;;
		'c'|'clean')
			upclean;
			;;
		'h'|'help')
			# Print up.tables file using less(1)
			less "${0}.tables";
			exit;
			;;
		*)
			# If $1 does NOT match any cases above, try special command table
			upspecial "$1"; ;;
	esac;
}

## The command in this table is used to "update" the package database
upupdate() {
	typeset -A updateTable;
	updateTable[desc]="Check for new packages (or in some systems, update package database)";
	updateTable[Darwin]="brew update";
	updateTable[OpenBSD]="doas pkg_add -Uun";
	updateTable[Debian]="sudo apt update";
	updateTable[Arch]="checkupdates";
	updateTable[Void]="sudo xbps-install -Suv";
	updateTable[Redhat]="sudo dnf check-update";
	
	# Assign $cmd and its description
	cmddesc+="${updateTable[desc]}";
	cmd+="${updateTable[$OS]}";
}

## The commands in this table are used to "list" outdated packages
uplist() {
	typeset -A uplistTable;
	uplistTable[desc]="List outdated packages";
	uplistTable[Darwin]="brew update;brew outdated";
	uplistTable[OpenBSD]="doas pkg_add -Uun";
	uplistTable[Debian]="sudo apt update;sudo apt list --upgradeable";
	uplistTable[Arch]="checkupdates;paru -Qu;yay -Qu";
	uplistTable[Void]="";
	uplistTable[Redhat]="sudo dnf check-update";
	
	# Assign $cmd and its description
	cmddesc+="${uplistTable[desc]}";
	cmd+="${uplistTable[$OS]}";
}

## The commands in this table are used to upgrade the outdated packages
upupgrade() {
	typeset -A upgradeTable;
	upgradeTable[desc]="Upgrade packages";
	upgradeTable[Darwin]="brew upgrade";
	upgradeTable[OpenBSD]="doas pkg_add -Uu";
	upgradeTable[FreeBSD]="sudo pkg update";
	upgradeTable[Debian]="sudo apt upgrade";
	upgradeTable[Arch]="sudo pacman -Syu;paru -Syu";
	upgradeTable[Void]="sudo xbps-install -Suv";
	upgradeTable[Redhat]="sudo dnf update";
	
	# Assign $cmd and its description
	cmddesc+="${upgradeTable["desc"]}";
	cmd+="${upgradeTable[$OS]}";
}

## The commands in this table are used to upgrade system software
upsys() {
	typeset -A upsysTable;
	upsysTable[desc]="Upgrade system software";
	upsysTable[Darwin]="softwareupdate -i -a";
	upsysTable[OpenBSD]="doas fw_update;doas syspatch";
	upsysTable[FreeBSD]="sudo freebsd-update fetch install";
	upsysTable[Debian]="sudo apt update;sudo apt full-upgrade";
	upsysTable[Arch]="yay -Syyuu";
	upsysTable[Void]="";
	upsysTable[Redhat]="sudo dnf upgrade --refresh";
	
	# Assign $cmd and its description
	cmddesc+="${upsysTable["desc"]}";
	cmd+="${upsysTable[$OS]}";
}

## The commands in this table are used to clean old files from unwanted/outdated packages
upclean() {
	typeset -A cleanTable;
	cleanTable[desc]="Clean unwanted and outdated package cache and files";
	cleanTable[Darwin]="brew cleanup";
	cleanTable[OpenBSD]="doas pkg_delete -a";
	cleanTable[FreeBSD]="sudo pkg autoremove;sudo pkg clean -a";
	cleanTable[Debian]="sudo apt autoremove;sudo apt autoclean";
	cleanTable[Arch]="pacman -Rns $(pacman -Qqdt | tr '\n' ' ');yay -Sc";
	cleanTable[Void]="sudo xbps-remove -Oo";
	cleanTable[Redhat]="sudo dnf autoremove;sudo dnf clean all";
	
	# Assign $cmd and its description
	cmddesc+="${cleanTable["desc"]}";
	cmd+="${cleanTable[$OS]}";
}

## Special commands whose associative array keys are not defined in upcmd()
upspecial() {
	typeset -A specTable;
	
	specTable[git]="up-git"; # See https://gitlab.com/artnoi-staple/unix/sh-tools/bin/up-git
	specTable[aur]+="paru -Syu";
	specTable[y]+="yay -Syu";
	
	## Assign $cmd and its description
	cmddesc+="Special command: ${specTable[$1]}";
	cmd+="${specTable[$1]}";
}

## up_after() - Run commands "after" 'cmd' commands
upafter() {
	printf "up: running up_after() scripts for %s\n" "$OS"
	# You can safely add your own command and logic here, as it is isolated from the rest of up.
	if	[ "$OS" == 'Darwin' ]; then
		simyn "up: Check for Apple updates?"\
		&& softwareupdate -l\
		&& simyn 'up: Perform Apple system upgrade from this shell? (Not recommended)'\
		&& softwareupdate -i -a;
	elif [ -n "$(command -v systemctl)" ]; then
		simyn 'Reload-restart systemd services?'\
		&&	systemctl daemon-reload\
		&&	systemctl reset-failed;
	fi
}
